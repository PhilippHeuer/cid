###
# Main Configuration / Global Defaults
###

# paths
paths:
  artifact: dist

# mode
mode: PREFER_LOCAL

# project conventions
conventions:
  branching: GitFlow
  commit: ConventionalCommits
  prereleasesuffix: "-rc.{NCI_LASTRELEASE_COMMIT_AFTER_COUNT}"

# stages
stages:
  - name: build
  - name: test
  - name: sast
  - name: package
  - name: qualitygate
  - name: publish
    rules:
      - expression: NCI_COMMIT_REF_PATH == "branch/develop" || NCI_COMMIT_REF_PATH == "branch/main" || NCI_COMMIT_REF_PATH == "branch/master" || NCI_COMMIT_REF_TYPE == "tag"

# actions
actions:
  # run locally (dev)
  run:
    - name: golang-run
      type: builtin
      scope: module
    - name: java-run
      type: builtin
      scope: module
    - name: python-run
      type: builtin
      scope: module
    - name: hugo-run
      type: builtin
      scope: module
  # build artifacts
  build:
    - name: golang-build
      type: builtin
      scope: module
      config:
        # debug information?
        debug: false
        # cross platform build
        platform:
          - goos: windows
            goarch: amd64
          - goos: linux
            goarch: amd64
          - goos: darwin
            goarch: amd64
    - name: java-build
      type: builtin
      scope: module
    - name: python-build
      type: builtin
      scope: module
    - name: node-build
      type: builtin
      scope: module
    - name: hugo-build
      type: builtin
      scope: module
    - name: helm-build
      type: builtin
      scope: module
  # test execution
  test:
    - name: golang-test
      type: builtin
      scope: module
    - name: java-test
      type: builtin
      scope: module
  # package
  package:
    # optimization
    - name: upx-optimize
      type: builtin
      scope: module
    # package
    - name: container-package
      type: builtin
      scope: module
  # linting
  lint:
    - name: golang-lint
      type: builtin
      scope: module
    - name: python-lint
      type: builtin
      scope: module
    - name: helm-lint
      type: builtin
      scope: module
  # static application security testing (embeds lint)
  sast:
    # linters
    - name: golang-lint
      type: builtin
      scope: module
    - name: python-lint
      type: builtin
      scope: module
    - name: helm-lint
      type: builtin
      scope: module
    # scanners
    - name: trivy-fs-scan
      type: builtin
      scope: project
    - name: fossa-scan
      type: builtin
      scope: project
    - name: gitleaks-scan
      type: builtin
      scope: project
    - name: gitguardian-scan
      type: builtin
      scope: project
    - name: sonarqube-scan
      type: builtin
      scope: project
    - name: dependencycheck-scan
      type: builtin
      scope: project
  publish:
    # tag / release
    - name: repo-tag-create
      type: builtin
      scope: project
    # changelog generator
    - name: repo-changelog-generate
      type: builtin
      scope: project
      config:
        # changelog generator configuration
        templates:
          - github-release.tmpl
          - discord-release.tmpl
        commit_pattern:
          - (?P<type>[A-Za-z]+)((?:\((?P<scope>[^()\r\n]*)\)|\()?(?P<breaking>!)?)(:\s?(?P<subject>.*))?
        title_maps:
          build: "Build System"
          ci: "CI"
          docs: "Documentation"
          feat: "Features"
          fix: "Bug Fixes"
          perf: "Performance"
          refactor: "Refactor"
          style: "Style"
          test: "Test"
          chore: "Internal"
        note_keywords:
          - keyword: NOTE
            title: Notes
          - keyword: BREAKING CHANGE
            title: Breaking Changes
    # publish release / assets
    - name: repo-release-github
      type: builtin
      scope: project
    # artifact push
    - name: java-publish
      type: builtin
      scope: module
    - name: helm-publish-nexus
      type: builtin
      scope: module

# local tools
tools:
  # golang
  - executable: go
    env-name: GOROOT_1_18
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 1.18.0
  - executable: go
    env-name: GOROOT_1_17
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 1.17.0
  - executable: go
    env-name: GOROOT_1_16
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 1.16.0
  - executable: go
    env-name: GOROOT_1_15
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 1.15.0
  - executable: go
    env-name: GOROOT_1_14
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 1.14.0
  - executable: go
    env-name: GOROOT_1_13
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 1.13.0
  - executable: go
    env-name: GOROOT_1_12
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 1.12.0
  # java
  - executable: java
    env-name: JAVA_HOME_17
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 17.0.0
  - executable: java
    env-name: JAVA_HOME_16
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 16.0.0
  - executable: java
    env-name: JAVA_HOME_15
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 15.0.0
  - executable: java
    env-name: JAVA_HOME_14
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 14.0.0
  - executable: java
    env-name: JAVA_HOME_13
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 13.0.0
  - executable: java
    env-name: JAVA_HOME_12
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 12.0.0
  - executable: java
    env-name: JAVA_HOME_11
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 11.0.0
  - executable: java
    env-name: JAVA_HOME_10
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 10.0.0
  - executable: java
    env-name: JAVA_HOME_9
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 9.0.0
  - executable: java
    env-name: JAVA_HOME_8
    env-allowed-suffix: ["_X64"]
    env-path-dir: /bin
    version: 8.0.0
  # docker
  - executable: docker
    env-name: PATH
    version: 0.0.0
  # git
  - executable: git
    env-name: PATH
    version: 0.0.0
  # npm
  - executable: npm
    env-name: PATH
    version: 0.0.0
  - executable: yarn
    env-name: PATH
    version: 0.0.0

# container images
container-images:
  # golang
  - executable: go
    image: docker.io/golang:1.18.1-bullseye
    version: 1.18.1
    cache:
      - id: go-pkg
        dir: /go/pkg
        type: volume
  - executable: go
    image: docker.io/golang:1.17.8-alpine
    version: 1.17.8
    cache:
      - id: go-pkg
        dir: /go/pkg
        type: volume
  - executable: go
    image: docker.io/golang:1.16.15-alpine
    version: 1.16.15
    cache:
      - id: go-pkg
        dir: /go/pkg
        type: volume
  - executable: go
    image: docker.io/golang:1.15.15-alpine
    version: 1.15.15
    cache:
      - id: go-pkg
        dir: /go/pkg
        type: volume
  # golangci-lint
  - executable: golangci-lint
    image: docker.io/golangci/golangci-lint:v1.44.2-alpine
    version: 1.44.2
  # java
  - executable: java
    image: docker.io/eclipse-temurin:17.0.2_8-jdk
    version: 17.0.2
    cache:
      - id: java-gradle
        dir: /root/.gradle
      - id: java-maven
        dir: /root/.m2
  - executable: java
    image: docker.io/eclipse-temurin:11.0.14.1_1-jdk
    version: 11.0.14
    cache:
      - id: java-gradle
        dir: /root/.gradle
      - id: java-maven
        dir: /root/.m2
  - executable: java
    image: docker.io/eclipse-temurin:8u322-b06-jdk
    version: 8.0.0
    cache:
      - id: java-gradle
        dir: /root/.gradle
      - id: java-maven
        dir: /root/.m2
  # node (npm, yarn, npx)
  - executable: node
    image: node:17.8.0-slim
    version: 17.8.0
    cache:
      - id: node-npm
        dir: /root/.npm
        type: volume
      - id: node-yarn-cache
        dir: /usr/local/share/.cache/yarn/v6
        type: volume
      - id: node-yarn-config
        dir: /root/.config/yarn
  - executable: yarn
    image: node:17.8.0-slim
    version: 1.22.18
    cache:
      - id: node-npm
        dir: /root/.npm
        type: volume
      - id: node-yarn-cache
        dir: /usr/local/share/.cache/yarn/v6
        type: volume
      - id: node-yarn-config
        dir: /root/.config/yarn
  - executable: npx
    image: node:17.8.0-slim
    version: 1.22.18
    cache:
      - id: node-npm
        dir: /root/.npm
        type: volume
      - id: node-yarn-cache
        dir: /usr/local/share/.cache/yarn/v6
        type: volume
      - id: node-yarn-config
        dir: /root/.config/yarn
  # helm
  - executable: helm
    image: lachlanevenson/k8s-helm:v3.8.1
    version: 3.8.1
    cache:
      - id: helm-config
        dir: /root/.config/helm
      - id: helm-cache
        dir: /root/.cache/helm/cache
      - id: helm-plugins
        dir: /root/.cache/helm/plugins
      - id: helm-repository
        dir: /root/.cache/helm/repository
  # upx
  - executable: upx
    image: envcli/upx:latest
    version: 3.95.0
  # gitleaks
  - executable: gitleaks
    image: docker.io/zricethezav/gitleaks:v8.4.0
    version: 8.4.0
  # gitguardian ggshield
  - executable: ggshield
    image: docker.io/gitguardian/ggshield:v1.10.8
    version: 1.10.8
  # sonarqube
  - executable: sonar-scanner
    image: docker.io/sonarsource/sonar-scanner-cli:4.7.0
    version: 4.7.0
  # trivy security scanner
  - executable: trivy
    image: aquasec/trivy:0.24.2
    version: 0.24.2
    cache:
      - id: trivy-cache
        dir: /root/.cache/trivy
  # shellcheck
  - executable: shellcheck
    image: docker.io/koalaman/shellcheck:v0.8.0
    version: 0.8.0
  # dependency-check
  - executable: dependency-check
    image: docker.io/cidverse/owasp-dependency-check:6.1.6
    version: 6.1.6
  # githubcli - gh
  - executable: gh
    image: cidverse/githubcli:1.11.0
    version: 1.11.0
  # twitch
  - executable: twitch
    image: docker.io/cidverse/twitchcli:1.0.2
    version: 1.0.2
    cache:
      - id: twitchcli-config
        dir: /root/.twitch-cli
  # fossa
  - executable: fossa
    image: ghcr.io/cidverse/fossacli:2.7.2
    version: 2.7.2
